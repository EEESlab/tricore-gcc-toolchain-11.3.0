#!/bin/bash

export TOOLCHAIN_ROOT="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
export INSTALL_FOLDER=$TOOLCHAIN_ROOT/INSTALL
export BUILD_FOLDER=$TOOLCHAIN_ROOT/BUILD
export LOG_FOLDER=$TOOLCHAIN_ROOT/LOG
export PATH=/mingw64/bin:/opt/bin:$INSTALL_FOLDER/bin:$PATH
PARALLEL_JOBS=$(nproc)
#PARALLEL_JOBS=1



if [[ $* == *--help* || $* == *-h* ]]; then
	echo "Usage: build-toolchain [--all] [--binutils-mcs] [--binutils] [--gcc-stage1] [--newlib] [--gcc-stage2] [--clean-all] [--clean-binutils-mcs] [--clean-binutils] [--clean-gcc-stage1] [--clean-newlib] [--clean-gcc-stage2] [--help | -h]"
	exit 0
fi



if [[ $* == *--clean-all* ]]; then
	rm -fr $BUILD_FOLDER
	rm -fr $LOG_FOLDER
fi


### Binutils MCS

if [[ $* == *--clean-binutils-mcs* ]]; then
	rm -fr $BUILD_FOLDER/binutils-mcs
fi

if [[ $* == *--binutils-mcs* || $* == *--all* ]]; then
	export BINUTILS_SRC_FOLDER=$TOOLCHAIN_ROOT/tricore-binutils-gdb
	mkdir -p $BUILD_FOLDER/binutils-mcs
	mkdir -p $LOG_FOLDER
	cd $BUILD_FOLDER/binutils-mcs
	if ! $BINUTILS_SRC_FOLDER/configure \
	LDFLAGS='-static' \
	--target=mcs-elf \
	--build=x86_64-linux-gnu \
	--host=i686-w64-mingw32 \
	--program-prefix=mcs-elf- \
	--disable-threads \
	--enable-nls \
	--disable-itcl \
	--disable-tk \
	--disable-tcl \
	--disable-winsup \
	--disable-gdbtk \
	--disable-libgui \
	--disable-rda \
	--disable-sid \
	--disable-sim \
	--disable-gdb \
	--disable-newlib \
	--disable-libgloss \
	--disable-test-suite \
	--enable-checking=release \
	--with-gnu-ld \
	--with-gnu-as \
	--with-gmp=/mingw32 \
	--prefix=$INSTALL_FOLDER \
	target_alias=mcs-elf \
	--disable-werror; then
		echo "The build has failed during configure of binutils-mcs"
		exit 1
	fi
	make --output-sync -j${PARALLEL_JOBS} LDFLAGS="-static" 2>&1 | tee $LOG_FOLDER/binutilsi-mcs.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during make of binutils-mcs"
		exit 1
	fi
	make install 2>&1 | tee -a  $LOG_FOLDER/binutilsi-mcs.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during install of binutils-mcs"
		exit 1
	fi
fi


### Binutils

if [[ $* == *--clean-binutils* ]]; then
	rm -fr $BUILD_FOLDER/binutils
fi

if [[ $* == *--binutils* || $* == *--all* ]]; then
	export BINUTILS_SRC_FOLDER=$TOOLCHAIN_ROOT/tricore-binutils-gdb
	mkdir -p $BUILD_FOLDER/binutils
	mkdir -p $LOG_FOLDER
	cd $BUILD_FOLDER/binutils
	if ! $BINUTILS_SRC_FOLDER/configure \
	LDFLAGS='-static' \
	--target=tricore-elf \
	--enable-targets=mcs-elf \
	--build=x86_64-linux-gnu \
	--host=i686-w64-mingw32 \
	--program-prefix=tricore-elf- \
	--disable-threads \
	--enable-nls \
	--disable-itcl \
	--disable-tk \
	--disable-tcl \
	--disable-winsup \
	--disable-gdbtk \
	--disable-libgui \
	--disable-rda \
	--disable-sid \
	--disable-sim \
	--disable-gdb \
	--disable-newlib \
	--disable-libgloss \
	--disable-test-suite \
	--enable-checking=release \
	--with-gnu-ld \
	--with-gnu-as \
	--with-gmp=/mingw32 \
	--prefix=$INSTALL_FOLDER \
	target_alias=tricore-elf \
	--disable-werror; then
		echo "The build has failed during configure of binutils"
		exit 1
	fi
	make --output-sync -j${PARALLEL_JOBS} LDFLAGS="-static" 2>&1 | tee $LOG_FOLDER/binutils.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during make of binutils"
		exit 1
	fi
	make install 2>&1 | tee -a  $LOG_FOLDER/binutils.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during install of binutils"
		exit 1
	fi
fi


### GCC stage1

if [[ $* == *--clean-gcc-stage1* ]]; then
	rm -fr $BUILD_FOLDER/gcc-stage1
fi

if [[ $* == *--gcc-stage1* || $* == *--all* ]]; then
	export GCC_SRC_FOLDER=$TOOLCHAIN_ROOT/tricore-gcc
	mkdir -p $BUILD_FOLDER/gcc-stage1
	mkdir -p $LOG_FOLDER
	cd $BUILD_FOLDER/gcc-stage1
	if ! $GCC_SRC_FOLDER/configure \
	CFLAGS='-I/mingw32/include' \
	CXXFLAGS='-I/mingw32/include' \
	LDFLAGS='-static -L/mingw32/lib' \
	CFLAGS_FOR_TARGET='-g -O2 -gdwarf-3' \
	CXXFLAGS_FOR_TARGET='-g -O2 -gdwarf-3' \
	--target=tricore-elf \
	--build=i686-w64-mingw32 \
	--host=i686-w64-mingw32 \
	--src=../../tricore-gcc \
	--enable-lib32 \
	--disable-lib64 \
	--prefix=$INSTALL_FOLDER \
	--enable-languages=c,c++ \
	--enable-libstdcxx-debug-flags='-gdwarf-3 -g -O0 -D_GLIBCXX_ASSERTIONS' \
	--enable-c99 \
	--enable-long-long \
	--enable-checking \
	--enable-nls \
	--enable-static \
	--disable-threads \
	--disable-shared \
	--with-headers=yes \
	--with-newlib=yes \
	--enable-mingw-wildcard \
	--disable-libstdcxx-pch \
	--enable-newlib-elix-level=3 \
	--enable-newlib-io-long-long \
	--disable-newlib-supplied-syscalls \
	--disable-libssp \
	--disable-test-suite; then
		echo "The build has failed during configure of gcc (stage 1)"
		exit 1
	fi
	make -j${PARALLEL_JOBS} all-gcc 2>&1 | tee $LOG_FOLDER/gcc_stage1.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during make of gcc (stage 1)"
		exit 1
	fi
	make install-gcc 2>&1 | tee -a $LOG_FOLDER/gcc_stage1.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during install of gcc (stage 1)"
		exit 1
	fi
fi


### Newlib

if [[ $* == *--clean-newlib* ]]; then
	rm -fr $BUILD_FOLDER/newlib
fi

if [[ $* == *--newlib* || $* == *--all* ]]; then
	export NEWLIB_SRC_FOLDER=$TOOLCHAIN_ROOT/tricore-newlib-cygwin
	mkdir -p $BUILD_FOLDER/newlib
	mkdir -p $LOG_FOLDER
	cd $BUILD_FOLDER/newlib
	export CC_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-gcc
	export CXX_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-c++
	export GCC_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-gcc
	export AR_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-ar
	export AS_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-as
	export LD_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-ld
	export NM_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-nm
	export OBJDUMP_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-objdump
	export RANLIB_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-ranlib
	export STRIP_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-strip
	export READELF_FOR_TARGET=$INSTALL_FOLDER/bin/tricore-elf-readelf
	if ! CFLAGS_FOR_TARGET='-g -gdwarf-3 -O2 -ffunction-sections -mfast-div -fno-common' \
	CXXFLAGS_FOR_TARGET='-g -gdwarf-3 -O2 -ffunction-sections -mfast-div -fno-common' \
	$NEWLIB_SRC_FOLDER/configure \
	--target=tricore-elf \
	--host=x86_64-linux-gnu \
	--build=i686-pc-mingw32 \
	--prefix=$INSTALL_FOLDER; then
		echo "The build has failed during configure of newlib"
		exit 1
	fi
	make -j${PARALLEL_JOBS} LDFLAGS="-static " all 2>&1 | tee $LOG_FOLDER/newlib.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during make of newlib"
	fi
	make install 2>&1 | tee -a $LOG_FOLDER/newlib.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during install of newlib"
		exit 1
	fi
fi


### GCC stage2

if [[ $* == *--clean-gcc-stage2* ]]; then
	rm -fr $BUILD_FOLDER/gcc-stage2
fi

if [[ $* == *--gcc-stage2* || $* == *--all* ]]; then
	export GCC_SRC_FOLDER=$TOOLCHAIN_ROOT/tricore-gcc
	mkdir -p $BUILD_FOLDER/gcc-stage2
	mkdir -p $LOG_FOLDER
	cd $BUILD_FOLDER/gcc-stage2
	if ! $GCC_SRC_FOLDER/configure \
	CFLAGS='-I/mingw32/include' \
	CXXFLAGS='-I/mingw32/include' \
	LDFLAGS='-static -L/mingw32/lib' \
	CFLAGS_FOR_TARGET='-g -O2 -gdwarf-3' \
	CXXFLAGS_FOR_TARGET='-g -O2 -gdwarf-3' \
	--target=tricore-elf \
	--build=i686-w64-mingw32 \
	--host=i686-w64-mingw32 \
	--src=../../tricore-gcc \
	--enable-lib32 \
	--disable-lib64 \
	--prefix=$INSTALL_FOLDER \
	--enable-languages=c,c++ \
	--enable-libstdcxx-debug-flags='-gdwarf-3 -g -O0 -D_GLIBCXX_ASSERTIONS' \
	--enable-c99 \
	--enable-long-long \
	--enable-checking \
	--enable-nls \
	--enable-static \
	--disable-threads \
	--disable-shared \
	--with-headers=yes \
	--with-gnu-ld \
	--with-gnu-as \
	--with-newlib=yes \
	--enable-mingw-wildcard \
	--disable-libstdcxx-pch \
	--enable-newlib-elix-level=3 \
	--enable-newlib-io-long-long \
	--disable-newlib-supplied-syscalls \
	--disable-libssp \
	--disable-test-suite; then
		echo "The build has failed during configure of gcc (stage 2)"
		exit 1
	fi
	make -j${PARALLEL_JOBS} all 2>&1 | tee $LOG_FOLDER/gcc_stage2.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during make of gcc (stage 2)"
		exit 1
	fi
	make install 2>&1 | tee -a $LOG_FOLDER/gcc_stage2.log
	if test ${PIPESTATUS[0]} -ne 0; then
		echo "The build has failed during install of gcc (stage 2)"
		exit 1
	fi
fi
